apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-valkey
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-valkey
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}-valkey
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-valkey
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-valkey
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: valkey
          image: "{{ .Values.valkey.image.repository }}:{{ .Values.valkey.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.valkey.persistence.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-valkey
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-valkey
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}-valkey
    app.kubernetes.io/instance: {{ .Release.Name }}