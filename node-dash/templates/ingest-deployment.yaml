apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ingest
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-ingest
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-ingest
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-ingest
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: ingest
          image: "{{ .Values.global.registry }}/{{ .Values.ingest.image.repository }}:{{ .Values.ingest.image.tag | default .Values.global.imageTag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Release.Name }}-postgres:5432/{{ .Values.postgresql.auth.database }}
            - name: REDIS_HOST
              value: "{{ .Release.Name }}-valkey"
            - name: SECRET_KEY
              value: {{ .Values.ingest.env.SECRET_KEY }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-ingest
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-ingest
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: {{ .Values.ingest.service.type }}
  ports:
    - port: {{ .Values.ingest.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}-ingest
    app.kubernetes.io/instance: {{ .Release.Name }}